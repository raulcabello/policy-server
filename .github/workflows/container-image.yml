name: build container image
on:
  push:
    branches:
    - main
    tags:
    - 'v*'
jobs:
  ci:
    # A branch is required, and cannot be dynamic - https://github.com/actions/runner/issues/1493
    uses: kubewarden/policy-server/.github/workflows/tests.yml@main
  build-x86_64:
    name: Build x86_64 binary
    runs-on: ubuntu-latest
    needs:
      - ci
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: rustup target add x86_64-unknown-linux-musl
      - name: Setup musl for x86_64
        run: |
          curl https://musl.cc/x86_64-linux-musl-cross.tgz | tar -xz
          echo "$PWD/x86_64-linux-musl-cross/bin" >> $GITHUB_PATH
      - name: Build policy-server
        env:
          CC: x86_64-linux-musl-gcc
        run: cargo build --target=x86_64-unknown-linux-musl --release
      - run: mv target/x86_64-unknown-linux-musl/release/policy-server policy-server-x86_64
      - name: Upload policy-server
        uses: actions/upload-artifact@v2
        with:
          name: policy-server-x86_64
          path: policy-server-x86_64
  build-aarch64:
    name: Build aarch64 binary
    runs-on: ubuntu-latest
    needs:
      - ci
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: rustup target add aarch64-unknown-linux-musl
      - name: Setup musl for aarch64
        run: |
          curl https://musl.cc/aarch64-linux-musl-cross.tgz | tar -xz
          echo "$PWD/aarch64-linux-musl-cross/bin" >> $GITHUB_PATH
      - name: Build policy-server
        env:
          CC: aarch64-linux-musl-gcc
        run: cargo build --target=aarch64-unknown-linux-musl --release
      - run: mv target/aarch64-unknown-linux-musl/release/policy-server policy-server-aarch64
      - name: Upload policy-server
        uses: actions/upload-artifact@v2
        with:
          name: policy-server-aarch64
          path: policy-server-aarch64
  build-container-image:
    name: Build container image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      id-token: write
    needs:
     - build-x86_64
     - build-aarch64
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: policy-server-x86_64
        uses: actions/download-artifact@v2
        with:
          name: policy-server-x86_64
      - name: policy-server-aarch64
        uses: actions/download-artifact@v2
        with:
          name: policy-server-aarch64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push development container image
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        id: build-latest
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/policy-server:latest
      - name: Retrieve tag name
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          echo TAG_NAME=$(echo $GITHUB_REF | sed -e "s|refs/tags/||") >> $GITHUB_ENV
      - name: Build and push tagged container image
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        id: build-tag
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/policy-server:${{ env.TAG_NAME }}
      - uses: sigstore/cosign-installer@main
      - name: Sign the images for releases
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          cosign sign \
            ghcr.io/${{ github.repository_owner }}/policy-server:${{ steps.build-tag.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: 1
      - name: Sign latest image
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        run: |
          cosign sign \
            ghcr.io/${{ github.repository_owner }}/policy-server:${{ steps.build-latest.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: 1

